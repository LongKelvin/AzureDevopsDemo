trigger:
  - "*"
variables:
  solution: "**/*.sln"
  buildPlatform: Any CPU
  buildConfiguration: Release
  releaseBranchName: "release"
  

schedules:
- cron: '0 3 * * *'
  displayName: 'Deploy every day at 3 A.M.'
  branches:
    include:
    - release
  always: false 

stages:
  - stage: Build
    displayName: Build the web application
    jobs:
      - job: Build
        displayName: Build the web application
        pool:
          name: Self-hosted
          demands:
            - agent.name -equals AspnetSelfhost

        steps:
          - task: NuGetToolInstaller@1
          - task: NuGetCommand@2
            inputs:
              restoreSolution: $(solution)
          - task: VSBuild@1
            inputs:
              solution: $(solution)
              msbuildArgs: >-
                /p:DeployOnBuild=true /p:WebPublishMethod=Package
                /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true
                /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip"
                /p:DeployIisAppPath="Default Web Site"
              platform: $(buildPlatform)
              configuration: $(buildConfiguration)
          - template: templates/build.yml
            parameters:
              buildConfiguration: Debug
          - template: templates/build.yml
            parameters:
              buildConfiguration: Release

         
          - task: DotNetCoreCLI@2
            displayName: Run unit tests - $(buildConfiguration)
            inputs:
              command: test
              arguments: "--no-build --configuration $(buildConfiguration)"
              publishTestResults: true
              projects: "**.NUnitTest/*"
          - task: PublishBuildArtifacts@1
            displayName: "Publish Artifact: drop"
            condition: succeeded()
  - stage: "Dev"
    displayName: "Deploy the web application to Dev enviroment"
    dependsOn: Build
    condition: |
      and
      (
        succeeded(),
        eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
      )
    jobs:
      - deployment: Deploy
        pool:
          name: Self-hosted
          demands:
            - agent.name -equals AspnetSelfhost
        environment: dev
        variables:
          - group: Release
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                - task: AzureWebApp@1
                  displayName: "Azure App Service Deploy: website"
                  inputs:
                    azureSubscription: "AzureDevopsServiceConnection"
                    appName: "$(AzureDevopsWebAppName_DEV)"
                    package: "$(Pipeline.Workspace)/drop/$(buildConfiguration)/AzureDevopsDemo.zip"

  - stage: "Test"
    displayName: "Deploy the web application to Test enviroment"
    dependsOn: Dev
    #condition: eq(variables['Build.Reason'], 'Schedule')
    jobs:
      - deployment: Deploy
        pool:
          name: Self-hosted
          demands:
            - agent.name -equals AspnetSelfhost
        environment: test
        variables:
          - group: Release
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                - task: AzureWebApp@1
                  displayName: "Azure App Service Deploy: website Test Env"
                  inputs:
                    azureSubscription: "AzureDevopsServiceConnection"
                    appName: "$(AzureDevopsWebAppName_TEST)"
                    package: "$(Pipeline.Workspace)/drop/$(buildConfiguration)/AzureDevopsDemo.zip"
  - stage: "Staging"
    displayName: "Deploy to Staging enviroment"
    dependsOn: Test
    #condition: eq(variables['Build.Reason'], 'Schedule')
    jobs:
      - deployment: Deploy
        pool:
          name: Self-hosted
          demands:
            - agent.name -equals AspnetSelfhost
        environment: staging
        variables:
          - group: Release
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                - task: AzureWebApp@1
                  displayName: "Azure App Service Deploy: website Test Env"
                  inputs:
                    azureSubscription: "AzureDevopsServiceConnection"
                    appName: "$(AzureDevopsWebAppName_STAGING)"
                    package: "$(Pipeline.Workspace)/drop/$(buildConfiguration)/AzureDevopsDemo.zip"
